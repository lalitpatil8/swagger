{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\code-assignment\\\\src\\\\Components\\\\Paths.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./Accordion/Accordion.css\";\nimport MYCONSTANT from \"../constant/constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Paths(props) {\n  _s();\n\n  const [path, setPath] = useState([]);\n  const [pathSelected, setPathSelected] = useState(null);\n  const [flag, setFlag] = useState(true);\n  useEffect(() => {\n    setPath(props === null || props === void 0 ? void 0 : props.path);\n  }, [props]);\n\n  const pathToggle = i => {\n    if (pathSelected === i) {\n      return setPathSelected(null);\n    }\n\n    setPathSelected(i);\n  };\n\n  const getFlag = () => {\n    setFlag(!flag);\n  };\n\n  const setMethodColor = (m, background, border, bg) => {\n    if (background) {\n      return m === MYCONSTANT.POST ? \"bg-green-\" + bg + \" border-green-\" + border : m === MYCONSTANT.PUT ? \"bg-green-\" + bg + \" border-green-\" + border : m === MYCONSTANT.GET ? \"bg-green-\" + bg + \" border-green-\" + border : \"bg-green-\" + bg + \" border-green-\" + border;\n    }\n\n    return m === MYCONSTANT.POST ? \"border-green-300 \" : m === MYCONSTANT.PUT ? \"border-orange-300\" : m === MYCONSTANT.GET ? \"border-sky-300\" : \"border-red-300\";\n  };\n\n  console.log(\"acc paths\", path);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.entries(path).map((data, i) => {\n      var _Object$entries;\n\n      return (_Object$entries = Object.entries(data[1])) === null || _Object$entries === void 0 ? void 0 : _Object$entries.map((method, k) => {\n        var _method$, _method$$parameters$, _method$2, _method$2$parameters$, _method$3, _method$4, _method$4$parameters$, _method$5, _method$6, _method$6$parameters$, _method$7, _method$7$parameters$, _method$8, _method$8$parameters$, _method$9, _method$9$parameters$, _method$10, _method$10$parameters;\n\n        return props.tag.name === method[1].tags[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `border my-2  ${setMethodColor(method[0], 300)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex p-2 border text-black ${setMethodColor(method[0], true)}`,\n            onClick: () => pathToggle(i),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: method[0] === MYCONSTANT.POST ? \"bg-green-400 border-green-500 border font-bold text-white py-1 px-4 rounded-sm uppercase\" : method[0] === MYCONSTANT.PUT ? \"bg-orange-400 border-orange-500 border font-bold text-white py-1 px-4 rounded-sm uppercase\" : method[0] === MYCONSTANT.GET ? \"bg-sky-400 border-sky-500 border font-bold text-white py-1 px-4 rounded-sm uppercase\" : \"bg-red-400 border-red-500 border font-bold text-white py-1 px-4 rounded-sm uppercase\",\n                children: method[0] !== null ? method[0] : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"p-4\",\n                children: data[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: method[1].summary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: pathSelected === i ? \"-\" : \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: pathSelected === i ? method[0] === MYCONSTANT.POST ? \"content show bg-green-200 border-green-300\" : method[0] === MYCONSTANT.PUT ? \"content show bg-orange-200 border-orange-300\" : method[0] === MYCONSTANT.GET ? \"content show bg-sky-200 border-sky-300\" : \"content show bg-red-200 border-red-300\" : method[0] === MYCONSTANT.POST ? \"content hide bg-green-200 border-green-300\" : method === MYCONSTANT.PUT ? \"content hide bg-orange-200 border-orange-300\" : method[0] === MYCONSTANT.GET ? \"content hide bg-sky-200 border-sky-300\" : \"content hide bg-red-200 border-red-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex bg-white text-black p-4 shadow-md\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: MYCONSTANT.PARAMETERS\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border-black border-2 p-1 rounded-sm\",\n                onClick: () => getFlag(),\n                children: flag ? MYCONSTANT.TRY : MYCONSTANT.CANCEL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-black px-2\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                class: \"table-fixed\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: MYCONSTANT.NAME\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: MYCONSTANT.DESCRIPTION\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: method[1].parameters.length <= 1 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [(_method$ = method[1]) === null || _method$ === void 0 ? void 0 : (_method$$parameters$ = _method$.parameters[0]) === null || _method$$parameters$ === void 0 ? void 0 : _method$$parameters$.name, /*#__PURE__*/_jsxDEV(\"small\", {\n                          className: \"text-red-900\",\n                          children: /*#__PURE__*/_jsxDEV(\"sup\", {\n                            children: ((_method$2 = method[1]) === null || _method$2 === void 0 ? void 0 : (_method$2$parameters$ = _method$2.parameters[0]) === null || _method$2$parameters$ === void 0 ? void 0 : _method$2$parameters$.name) !== undefined ? MYCONSTANT.REQUIRED : null\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 120,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 119,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 29\n                      }, this), \"\\xA0\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: ((_method$3 = method[1]) === null || _method$3 === void 0 ? void 0 : _method$3.description) === \"\" ? (_method$4 = method[1]) === null || _method$4 === void 0 ? void 0 : (_method$4$parameters$ = _method$4.parameters[0]) === null || _method$4$parameters$ === void 0 ? void 0 : _method$4$parameters$.description : (_method$5 = method[1]) === null || _method$5 === void 0 ? void 0 : _method$5.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 131,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 29\n                      }, this), ((_method$6 = method[1]) === null || _method$6 === void 0 ? void 0 : (_method$6$parameters$ = _method$6.parameters[0]) === null || _method$6$parameters$ === void 0 ? void 0 : _method$6$parameters$.type) === MYCONSTANT.STRING || ((_method$7 = method[1]) === null || _method$7 === void 0 ? void 0 : (_method$7$parameters$ = _method$7.parameters[0]) === null || _method$7$parameters$ === void 0 ? void 0 : _method$7$parameters$.type) === MYCONSTANT.INTEGER ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            className: \"p-0\",\n                            value: (_method$8 = method[1]) === null || _method$8 === void 0 ? void 0 : (_method$8$parameters$ = _method$8.parameters[0]) === null || _method$8$parameters$ === void 0 ? void 0 : _method$8$parameters$.type,\n                            disabled: \"true\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 143,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 142,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 31\n                      }, this) : ((_method$9 = method[1]) === null || _method$9 === void 0 ? void 0 : (_method$9$parameters$ = _method$9.parameters[0]) === null || _method$9$parameters$ === void 0 ? void 0 : _method$9$parameters$.type) === MYCONSTANT.FILE ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: /*#__PURE__*/_jsxDEV(\"small\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"file\",\n                              className: \"p-0\",\n                              id: \"file\",\n                              name: \"file\",\n                              accept: \"image/png, image/jpeg\",\n                              disabled: \"true\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 156,\n                              columnNumber: 37\n                            }, this), \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 155,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 154,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 31\n                      }, this) : ((_method$10 = method[1]) === null || _method$10 === void 0 ? void 0 : (_method$10$parameters = _method$10.parameters[0]) === null || _method$10$parameters === void 0 ? void 0 : _method$10$parameters.type) === MYCONSTANT.ARRAY ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        disabled: \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"code\", {\n                          className: \"border border-black p-2 bg-black text-white\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 173,\n                            columnNumber: 36\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this) : method[1].parameters.map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                        children: [p.name + \" (\" + p.type + \")\", /*#__PURE__*/_jsxDEV(\"small\", {\n                          className: \"text-red-900\",\n                          children: /*#__PURE__*/_jsxDEV(\"sup\", {\n                            children: MYCONSTANT.REQUIRED\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 186,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 31\n                      }, this), \"\\xA0\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: p.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 31\n                      }, this), p.type === MYCONSTANT.STRING || p.type === MYCONSTANT.INTEGER ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            className: \"p-0\",\n                            value: p.type,\n                            disabled: \"true\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 199,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 198,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 33\n                      }, this) : p.type === MYCONSTANT.FILE ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"file\",\n                            className: \"p-0\",\n                            id: \"file\",\n                            name: \"file\",\n                            accept: \"image/png, image/jpeg\",\n                            disabled: \"true\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 210,\n                            columnNumber: 37\n                          }, this), \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 33\n                      }, this) : p.type === MYCONSTANT.BODY ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"code\", {\n                          className: \"border-2 border-black p-4\",\n                          children: \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 33\n                      }, this) : p.type === MYCONSTANT.ARRAY ? MYCONSTANT.ARRAY ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                          disabled: \"true\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 35\n                      }, this) : \"\" : \"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : null;\n      });\n    })\n  }, void 0, false);\n}\n\n_s(Paths, \"88XcX2FTVVVtXSQZBkASolV5M6o=\");\n\n_c = Paths;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paths\");","map":{"version":3,"names":["useEffect","useState","MYCONSTANT","Paths","props","path","setPath","pathSelected","setPathSelected","flag","setFlag","pathToggle","i","getFlag","setMethodColor","m","background","border","bg","POST","PUT","GET","console","log","Object","entries","map","data","method","k","tag","name","tags","summary","PARAMETERS","TRY","CANCEL","NAME","DESCRIPTION","parameters","length","undefined","REQUIRED","description","type","STRING","INTEGER","FILE","ARRAY","p","BODY"],"sources":["D:/Task/code-assignment/src/Components/Paths.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Accordion/Accordion.css\";\r\nimport MYCONSTANT from \"../constant/constant\";\r\n\r\nexport default function Paths(props) {\r\n  const [path, setPath] = useState([]);\r\n  const [pathSelected, setPathSelected] = useState(null);\r\n  const [flag, setFlag] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setPath(props?.path);\r\n  }, [props]);\r\n\r\n  const pathToggle = (i) => {\r\n    if (pathSelected === i) {\r\n      return setPathSelected(null);\r\n    }\r\n    setPathSelected(i);\r\n  };\r\n\r\n  const getFlag = () => {\r\n    setFlag(!flag);\r\n  };\r\n\r\n  const setMethodColor = (m, background, border, bg) => {\r\n    if (background) {\r\n      return m === MYCONSTANT.POST\r\n        ? \"bg-green-\"+bg+\" border-green-\"+border\r\n        : m === MYCONSTANT.PUT\r\n        ? \"bg-green-\"+bg+\" border-green-\"+border\r\n        : m === MYCONSTANT.GET\r\n        ? \"bg-green-\"+bg+\" border-green-\"+border\r\n        : \"bg-green-\"+bg+\" border-green-\"+border;\r\n    }\r\n    return m === MYCONSTANT.POST\r\n      ? \"border-green-300 \"\r\n      : m === MYCONSTANT.PUT\r\n      ? \"border-orange-300\"\r\n      : m === MYCONSTANT.GET\r\n      ? \"border-sky-300\"\r\n      : \"border-red-300\";\r\n  };\r\n  console.log(\"acc paths\", path);\r\n  return (\r\n    <>\r\n      {Object.entries(path).map((data, i) =>\r\n        Object.entries(data[1])?.map((method, k) =>\r\n          props.tag.name === method[1].tags[0] ? (\r\n            <div className={`border my-2  ${setMethodColor(method[0], 300)}`}>\r\n              <div\r\n                className={`flex p-2 border text-black ${setMethodColor(\r\n                  method[0],\r\n                  true\r\n                )}`}\r\n                onClick={() => pathToggle(i)}\r\n              >\r\n                <div>\r\n                  <span\r\n                    className={\r\n                      method[0] === MYCONSTANT.POST\r\n                        ? \"bg-green-400 border-green-500 border font-bold text-white py-1 px-4 rounded-sm uppercase\"\r\n                        : method[0] === MYCONSTANT.PUT\r\n                        ? \"bg-orange-400 border-orange-500 border font-bold text-white py-1 px-4 rounded-sm uppercase\"\r\n                        : method[0] === MYCONSTANT.GET\r\n                        ? \"bg-sky-400 border-sky-500 border font-bold text-white py-1 px-4 rounded-sm uppercase\"\r\n                        : \"bg-red-400 border-red-500 border font-bold text-white py-1 px-4 rounded-sm uppercase\"\r\n                    }\r\n                  >\r\n                    {method[0] !== null ? method[0] : null}\r\n                  </span>\r\n\r\n                  <strong className=\"p-4\">{data[0]}</strong>\r\n                  <span>{method[1].summary}</span>\r\n                </div>\r\n                <span>{pathSelected === i ? \"-\" : \"+\"}</span>\r\n              </div>\r\n              <div\r\n                className={\r\n                  pathSelected === i\r\n                    ? method[0] === MYCONSTANT.POST\r\n                      ? \"content show bg-green-200 border-green-300\"\r\n                      : method[0] === MYCONSTANT.PUT\r\n                      ? \"content show bg-orange-200 border-orange-300\"\r\n                      : method[0] === MYCONSTANT.GET\r\n                      ? \"content show bg-sky-200 border-sky-300\"\r\n                      : \"content show bg-red-200 border-red-300\"\r\n                    : method[0] === MYCONSTANT.POST\r\n                    ? \"content hide bg-green-200 border-green-300\"\r\n                    : method === MYCONSTANT.PUT\r\n                    ? \"content hide bg-orange-200 border-orange-300\"\r\n                    : method[0] === MYCONSTANT.GET\r\n                    ? \"content hide bg-sky-200 border-sky-300\"\r\n                    : \"content hide bg-red-200 border-red-300\"\r\n                }\r\n              >\r\n                <div className=\"flex bg-white text-black p-4 shadow-md\">\r\n                  <div>{MYCONSTANT.PARAMETERS}</div>\r\n                  <div\r\n                    className=\"border-black border-2 p-1 rounded-sm\"\r\n                    onClick={() => getFlag()}\r\n                  >\r\n                    {flag ? MYCONSTANT.TRY : MYCONSTANT.CANCEL}\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-black px-2\">\r\n                  <table class=\"table-fixed\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>{MYCONSTANT.NAME}</th>\r\n                        <th>{MYCONSTANT.DESCRIPTION}</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {method[1].parameters.length <= 1 ? (\r\n                        <tr>\r\n                          <td>\r\n                            <p>\r\n                              {method[1]?.parameters[0]?.name}\r\n                              <small className=\"text-red-900\">\r\n                                <sup>\r\n                                  {method[1]?.parameters[0]?.name !== undefined\r\n                                    ? MYCONSTANT.REQUIRED\r\n                                    : null}\r\n                                </sup>\r\n                              </small>\r\n                            </p>\r\n                            &nbsp;\r\n                          </td>\r\n                          <td>\r\n                            <p>\r\n                              <small>\r\n                                {method[1]?.description === \"\"\r\n                                  ? method[1]?.parameters[0]?.description\r\n                                  : method[1]?.description}\r\n                              </small>\r\n                            </p>\r\n                            {method[1]?.parameters[0]?.type ===\r\n                              MYCONSTANT.STRING ||\r\n                            method[1]?.parameters[0]?.type ===\r\n                              MYCONSTANT.INTEGER ? (\r\n                              <div>\r\n                                <small>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"p-0\"\r\n                                    value={method[1]?.parameters[0]?.type}\r\n                                    disabled=\"true\"\r\n                                  />\r\n                                </small>\r\n                              </div>\r\n                            ) : method[1]?.parameters[0]?.type ===\r\n                              MYCONSTANT.FILE ? (\r\n                              <div>\r\n                                <p>\r\n                                  <small>\r\n                                    <input\r\n                                      type=\"file\"\r\n                                      className=\"p-0\"\r\n                                      id=\"file\"\r\n                                      name=\"file\"\r\n                                      accept=\"image/png, image/jpeg\"\r\n                                      disabled=\"true\"\r\n                                    />{\" \"}\r\n                                  </small>\r\n                                </p>\r\n                              </div>\r\n                            ) : method[1]?.parameters[0]?.type ===\r\n                              MYCONSTANT.ARRAY ? (\r\n                              <textarea disabled=\"true\"></textarea>\r\n                            ) : (\r\n                              <div>\r\n                                <code className=\"border border-black p-2 bg-black text-white\">\r\n                                  {<p></p>}\r\n                                </code>\r\n                              </div>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ) : (\r\n                        method[1].parameters.map((p) => (\r\n                          <tr>\r\n                            <td>\r\n                              <small>\r\n                                {p.name + \" (\" + p.type + \")\"}\r\n                                <small className=\"text-red-900\">\r\n                                  <sup>{MYCONSTANT.REQUIRED}</sup>\r\n                                </small>\r\n                              </small>\r\n                              &nbsp;\r\n                            </td>\r\n                            <td>\r\n                              <p>\r\n                                <small>{p.description}</small>\r\n                              </p>\r\n                              {p.type === MYCONSTANT.STRING ||\r\n                              p.type === MYCONSTANT.INTEGER ? (\r\n                                <div>\r\n                                  <small>\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"p-0\"\r\n                                      value={p.type}\r\n                                      disabled=\"true\"\r\n                                    />\r\n                                  </small>\r\n                                </div>\r\n                              ) : p.type === MYCONSTANT.FILE ? (\r\n                                <div>\r\n                                  <small>\r\n                                    <input\r\n                                      type=\"file\"\r\n                                      className=\"p-0\"\r\n                                      id=\"file\"\r\n                                      name=\"file\"\r\n                                      accept=\"image/png, image/jpeg\"\r\n                                      disabled=\"true\"\r\n                                    />{\" \"}\r\n                                  </small>\r\n                                </div>\r\n                              ) : p.type === MYCONSTANT.BODY ? (\r\n                                <div>\r\n                                  <code className=\"border-2 border-black p-4\">\r\n                                    {\"\"}\r\n                                  </code>\r\n                                </div>\r\n                              ) : p.type === MYCONSTANT.ARRAY ? (\r\n                                MYCONSTANT.ARRAY ? (\r\n                                  <p>\r\n                                    <textarea disabled=\"true\"></textarea>\r\n                                  </p>\r\n                                ) : (\r\n                                  \"\"\r\n                                )\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                        ))\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}